// <auto-generated />
using System;
using DUSAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DUSAPI.Migrations
{
    [DbContext(typeof(dusContext))]
    partial class dusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DUSAPI.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Branchcode")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Branchname")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasColumnName("isDelete");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('A')")
                        .IsFixedLength();
                            

                    b.HasKey("Id");

                    b.ToTable("branch", (string)null);
                });

            modelBuilder.Entity("DUSAPI.Models.Documents", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte>("IsDelete")
                        .HasColumnType("tinyint")
                        .HasColumnName("isDelete");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("documents", (string)null);
                });

            modelBuilder.Entity("DUSAPI.Models.Maintenance", b =>
                {
                    b.Property<string>("Branches")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Document")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.ToTable("maintenance", (string)null);
                });

            modelBuilder.Entity("DUSAPI.Models.PrmtAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Filename")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Filepath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<byte>("IsDelete")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NewFilename")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("prmt_attachment", (string)null);
                });

            modelBuilder.Entity("DUSAPI.Models.PrmtDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateUploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Document")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("FullDetails")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("isDelete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("prmt_details", (string)null);
                });

            modelBuilder.Entity("DUSAPI.Models.Transaction", b =>
                {
                    b.Property<string>("DocumentEntry")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.ToTable("transaction", (string)null);
                });


            modelBuilder.Entity("DUSAPI.Models.UserList", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                b.Property<string>("Username")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("Password")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("ConfirmPassword")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("Email")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("Lastname")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("Firstname")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("Middlename")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("ContactNumber")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(13)");

                b.Property<string>("Address")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("UserType")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");

                b.Property<string>("AccountType")
                    .HasMaxLength(55)
                    .IsUnicode(false)
                    .HasColumnType("varchar(55)");


                b.Property<int?>("CreatedBy")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedDate")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                b.Property<byte?>("IsDelete")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("tinyint")
                    .HasColumnName("isDelete")
                    .HasDefaultValueSql("((0))");

                b.Property<int?>("ModifiedBy")
                    .HasColumnType("int");

                b.Property<DateTime?>("ModifiedDate")
                    .HasColumnType("datetime");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnType("char(1)")
                    .HasDefaultValueSql("('A')")
                    .IsFixedLength();

                b.HasKey("Id");

                b.ToTable("user_list", (string)null);
            });


#pragma warning restore 612, 618
        }
    }
}
